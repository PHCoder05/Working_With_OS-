#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>

void main()
{
	FILE *fp=0,*fp1=0;
	int fd1[2],fd2[2],len=0;
	pid_t pid;
           char path[]="/home/dbl/gsm/test.txt";
	if(pipe(fd1) == -1)
	{
		perror("pipe1");
		exit(0);
	}
	if(pipe(fd2) == -1)
	{
		perror("pipe2");
		exit(0);
	}
	
	pid = fork();
	if(pid<0)
	{
		perror("Error in spawning fork");
		exit(0);
	}
	else if(pid>0)
	{
		char buffer[200];
		fp = fopen(path,"a+");
		close(fd1[0]);
		len = write(fd1[1],fp,sizeof(fp));
		wait();
		memset(buffer,0,200);
		close(fd2[1]);
		read(fd2[0],fp,sizeof(fp));
		fp = fopen(path,"r");
		fread(buffer,200,1,fp);
                        printf("\n*----------------------*/ PARENT /*---------------------*");
		printf("\n In Parent\n\nReading File...\n\n%s",buffer);
		printf("\n");
	}
	else
	{
		char buffer[200];
		close(fd1[1]);
		len = read(fd1[0],buffer,200);
		fp1 = fopen(path,"a+");
		memset(buffer,0,200);
	           fread(buffer,200,1,fp1);
                        printf("\n*-----------------------*/ CHILD /*----------------------*");
		printf("\n In Child\n\nRetriving File...\n\n%s",buffer);
		fseek(fp1,0,SEEK_END);
		fprintf(fp1,"Child wrote this....!!!!");
                         printf("\n");
		fclose(fp1);
		close(fd2[0]);
		write(fd2[1],fp1,sizeof(fp1));
		
	}
}
